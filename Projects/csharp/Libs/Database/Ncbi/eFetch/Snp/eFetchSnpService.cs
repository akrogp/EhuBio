// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
// This source code was auto-generated by Web Services Description Language Utility
//Mono Framework v4.0.30319.1
//

namespace EhuBio.Database.Ncbi.eFetch.Snp {

/// <remarks/>
[System.Web.Services.WebServiceBinding(Name="eUtilsServiceSoap", Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class eFetchSnpService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback run_eFetchOperationCompleted;
    
    public eFetchSnpService() {
        this.Url = "http://eutils.ncbi.nlm.nih.gov/soap/v2.0/soap_adapter_2_0.cgi?db=snp";
    }
    
    public event run_eFetchCompletedEventHandler run_eFetchCompleted;
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("efetch", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("eFetchResult", Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
    public MessageEFetchResult run_eFetch([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")] MessageEFetchRequest eFetchRequest) {
        object[] results = this.Invoke("run_eFetch", new object[] {
                    eFetchRequest});
        return ((MessageEFetchResult)(results[0]));
    }
    
    public System.IAsyncResult Beginrun_eFetch(MessageEFetchRequest eFetchRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("run_eFetch", new object[] {
                    eFetchRequest}, callback, asyncState);
    }
    
    public MessageEFetchResult Endrun_eFetch(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MessageEFetchResult)(results[0]));
    }
    
    public void run_eFetchAsync(MessageEFetchRequest eFetchRequest) {
        this.run_eFetchAsync(eFetchRequest, null);
    }
    
    public void run_eFetchAsync(MessageEFetchRequest eFetchRequest, object userState) {
        if ((this.run_eFetchOperationCompleted == null)) {
            this.run_eFetchOperationCompleted = new System.Threading.SendOrPostCallback(this.Onrun_eFetchCompleted);
        }
        this.InvokeAsync("run_eFetch", new object[] {
                    eFetchRequest}, this.run_eFetchOperationCompleted, userState);
    }
    
    private void Onrun_eFetchCompleted(object arg) {
        if ((this.run_eFetchCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.run_eFetchCompleted(this, new run_eFetchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
[System.Xml.Serialization.XmlRootAttribute("eFetchRequest", Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class MessageEFetchRequest {
    
    private string idField;
    
    private string webEnvField;
    
    private string query_keyField;
    
    private string toolField;
    
    private string emailField;
    
    private string retstartField;
    
    private string retmaxField;
    
    /// <remarks/>
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public string WebEnv {
        get {
            return this.webEnvField;
        }
        set {
            this.webEnvField = value;
        }
    }
    
    /// <remarks/>
    public string query_key {
        get {
            return this.query_keyField;
        }
        set {
            this.query_keyField = value;
        }
    }
    
    /// <remarks/>
    public string tool {
        get {
            return this.toolField;
        }
        set {
            this.toolField = value;
        }
    }
    
    /// <remarks/>
    public string email {
        get {
            return this.emailField;
        }
        set {
            this.emailField = value;
        }
    }
    
    /// <remarks/>
    public string retstart {
        get {
            return this.retstartField;
        }
        set {
            this.retstartField = value;
        }
    }
    
    /// <remarks/>
    public string retmax {
        get {
            return this.retmaxField;
        }
        set {
            this.retmaxField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
[System.Xml.Serialization.XmlRootAttribute("eFetchResult", Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class MessageEFetchResult {
    
    private string eRRORField;
    
    private ExchangeSet exchangeSetField;
    
    private string[] idListField;
    
    /// <remarks/>
    public string ERROR {
        get {
            return this.eRRORField;
        }
        set {
            this.eRRORField = value;
        }
    }
    
    /// <remarks/>
    public ExchangeSet ExchangeSet {
        get {
            return this.exchangeSetField;
        }
        set {
            this.exchangeSetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItem(ElementName="Id", IsNullable=false)]
    public string[] IdList {
        get {
            return this.idListField;
        }
        set {
            this.idListField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class ExchangeSet {
    
    private string setTypeField;
    
    private string setDepthField;
    
    private string specVersionField;
    
    private int dbSnpBuildField;
    
    private bool dbSnpBuildSpecifiedField;
    
    private string generatedField;
    
    private ExchangeSetSourceDatabase sourceDatabaseField;
    
    private Rs[] rsField;
    
    private Assay assayField;
    
    private ExchangeSetQuery queryField;
    
    private ExchangeSetSummary summaryField;
    
    private BaseURL[] baseURLField;
    
    /// <remarks>
///set-type: full dump; from query; single
///						refSNP
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string setType {
        get {
            return this.setTypeField;
        }
        set {
            this.setTypeField = value;
        }
    }
    
    /// <remarks>
///content depth: brief XML (only refSNP properties and summary
///						subSNP element content); full XML (full refSNP, full subSNP content; all
///						flanking sequences) 
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string setDepth {
        get {
            return this.setDepthField;
        }
        set {
            this.setDepthField = value;
        }
    }
    
    /// <remarks>
///version number of docsum.asn/docsum.dtd
///						specification
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string specVersion {
        get {
            return this.specVersionField;
        }
        set {
            this.specVersionField = value;
        }
    }
    
    /// <remarks>
///build number of database for this export
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int dbSnpBuild {
        get {
            return this.dbSnpBuildField;
        }
        set {
            this.dbSnpBuildField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool dbSnpBuildSpecified {
        get {
            return this.dbSnpBuildSpecifiedField;
        }
        set {
            this.dbSnpBuildSpecifiedField = value;
        }
    }
    
    /// <remarks>
///Generated date
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string generated {
        get {
            return this.generatedField;
        }
        set {
            this.generatedField = value;
        }
    }
    
    /// <remarks/>
    public ExchangeSetSourceDatabase SourceDatabase {
        get {
            return this.sourceDatabaseField;
        }
        set {
            this.sourceDatabaseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Rs")]
    public Rs[] Rs {
        get {
            return this.rsField;
        }
        set {
            this.rsField = value;
        }
    }
    
    /// <remarks/>
    public Assay Assay {
        get {
            return this.assayField;
        }
        set {
            this.assayField = value;
        }
    }
    
    /// <remarks/>
    public ExchangeSetQuery Query {
        get {
            return this.queryField;
        }
        set {
            this.queryField = value;
        }
    }
    
    /// <remarks/>
    public ExchangeSetSummary Summary {
        get {
            return this.summaryField;
        }
        set {
            this.summaryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BaseURL")]
    public BaseURL[] BaseURL {
        get {
            return this.baseURLField;
        }
        set {
            this.baseURLField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class ExchangeSetSourceDatabase {
    
    private int taxIdField;
    
    private string organismField;
    
    private string dbSnpOrgAbbrField;
    
    private string gpipeOrgAbbrField;
    
    /// <remarks>
///NCBI taxonomy ID for
///									variation
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int taxId {
        get {
            return this.taxIdField;
        }
        set {
            this.taxIdField = value;
        }
    }
    
    /// <remarks>
///common name for species used as part of database
///									name.
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string organism {
        get {
            return this.organismField;
        }
        set {
            this.organismField = value;
        }
    }
    
    /// <remarks>
///organism abbreviation used in dbSNP.
///								
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string dbSnpOrgAbbr {
        get {
            return this.dbSnpOrgAbbrField;
        }
        set {
            this.dbSnpOrgAbbrField = value;
        }
    }
    
    /// <remarks>
///organism abbreviation used within NCBI genome
///									pipeline data dumps.
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string gpipeOrgAbbr {
        get {
            return this.gpipeOrgAbbrField;
        }
        set {
            this.gpipeOrgAbbrField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class Rs {
    
    private int rsIdField;
    
    private RsSnpClass snpClassField;
    
    private RsSnpType snpTypeField;
    
    private RsMolType molTypeField;
    
    private string validProbMinField;
    
    private string validProbMaxField;
    
    private bool genotypeField;
    
    private bool genotypeSpecifiedField;
    
    private string bitFieldField;
    
    private int taxIdField1;
    
    private bool taxIdSpecifiedField;
    
    private RsHet hetField;
    
    private RsValidation validationField;
    
    private RsCreate createField;
    
    private RsUpdate updateField;
    
    private RsSequence sequenceField;
    
    private Ss[] ssField;
    
    private Assembly[] assemblyField;
    
    private PrimarySequence[] primarySequenceField;
    
    private RsStruct[] rsStructField;
    
    private RsLinkout[] rsLinkoutField;
    
    private RsMergeHistory[] mergeHistoryField;
    
    private string[] hgvsField;
    
    private RsAlleleOrigin[] alleleOriginField1;
    
    private string[][] phenotypeField;
    
    private RsBioSource[] bioSourceField;
    
    private RsFrequency[] frequencyField;
    
    /// <remarks>
///refSNP (rs) number
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int rsId {
        get {
            return this.rsIdField;
        }
        set {
            this.rsIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public RsSnpClass snpClass {
        get {
            return this.snpClassField;
        }
        set {
            this.snpClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public RsSnpType snpType {
        get {
            return this.snpTypeField;
        }
        set {
            this.snpTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public RsMolType molType {
        get {
            return this.molTypeField;
        }
        set {
            this.molTypeField = value;
        }
    }
    
    /// <remarks>
///minimum reported success rate of all submissions in
///						cluster
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string validProbMin {
        get {
            return this.validProbMinField;
        }
        set {
            this.validProbMinField = value;
        }
    }
    
    /// <remarks>
///maximum reported success rate of all submissions in
///						cluster
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string validProbMax {
        get {
            return this.validProbMaxField;
        }
        set {
            this.validProbMaxField = value;
        }
    }
    
    /// <remarks>
///at least one genotype reported for this
///						refSNP
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public bool genotype {
        get {
            return this.genotypeField;
        }
        set {
            this.genotypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool genotypeSpecified {
        get {
            return this.genotypeSpecifiedField;
        }
        set {
            this.genotypeSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string bitField {
        get {
            return this.bitFieldField;
        }
        set {
            this.bitFieldField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int taxId {
        get {
            return this.taxIdField1;
        }
        set {
            this.taxIdField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool taxIdSpecified {
        get {
            return this.taxIdSpecifiedField;
        }
        set {
            this.taxIdSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    public RsHet Het {
        get {
            return this.hetField;
        }
        set {
            this.hetField = value;
        }
    }
    
    /// <remarks/>
    public RsValidation Validation {
        get {
            return this.validationField;
        }
        set {
            this.validationField = value;
        }
    }
    
    /// <remarks>
///date the refsnp cluster was
///							instantiated
///</remarks>
    public RsCreate Create {
        get {
            return this.createField;
        }
        set {
            this.createField = value;
        }
    }
    
    /// <remarks>
///most recent date the cluster was updated (member added or
///							deleted)
///</remarks>
    public RsUpdate Update {
        get {
            return this.updateField;
        }
        set {
            this.updateField = value;
        }
    }
    
    /// <remarks/>
    public RsSequence Sequence {
        get {
            return this.sequenceField;
        }
        set {
            this.sequenceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Ss")]
    public Ss[] Ss {
        get {
            return this.ssField;
        }
        set {
            this.ssField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Assembly")]
    public Assembly[] Assembly {
        get {
            return this.assemblyField;
        }
        set {
            this.assemblyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PrimarySequence")]
    public PrimarySequence[] PrimarySequence {
        get {
            return this.primarySequenceField;
        }
        set {
            this.primarySequenceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RsStruct")]
    public RsStruct[] RsStruct {
        get {
            return this.rsStructField;
        }
        set {
            this.rsStructField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RsLinkout")]
    public RsLinkout[] RsLinkout {
        get {
            return this.rsLinkoutField;
        }
        set {
            this.rsLinkoutField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MergeHistory")]
    public RsMergeHistory[] MergeHistory {
        get {
            return this.mergeHistoryField;
        }
        set {
            this.mergeHistoryField = value;
        }
    }
    
    /// <remarks>
/// HGVS name list 
///</remarks>
    [System.Xml.Serialization.XmlElementAttribute("hgvs")]
    public string[] hgvs {
        get {
            return this.hgvsField;
        }
        set {
            this.hgvsField = value;
        }
    }
    
    /// <remarks>
///    
///							origin of this allele, if known
///							note that these are powers-of-two, and represent bits; thus, we can
///							represent more than one state simultaneously through a bitwise OR
///							unknown         (0),
///							germline        (1),
///							somatic         (2),
///							inherited       (4),
///							paternal        (8),
///							maternal        (16),
///							de-novo         (32),
///							biparental      (64),
///							uniparental     (128),
///							not-tested      (256),
///							tested-inconclusive (512),
///						
///</remarks>
    [System.Xml.Serialization.XmlElementAttribute("AlleleOrigin")]
    public RsAlleleOrigin[] AlleleOrigin {
        get {
            return this.alleleOriginField1;
        }
        set {
            this.alleleOriginField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Phenotype")]
    public string[][] Phenotype {
        get {
            return this.phenotypeField;
        }
        set {
            this.phenotypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BioSource")]
    public RsBioSource[] BioSource {
        get {
            return this.bioSourceField;
        }
        set {
            this.bioSourceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Frequency")]
    public RsFrequency[] Frequency {
        get {
            return this.frequencyField;
        }
        set {
            this.frequencyField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum RsSnpClass {
    
    /// <remarks/>
    snp,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("in-del")]
    indel,
    
    /// <remarks/>
    heterozygous,
    
    /// <remarks/>
    microsatellite,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("named-locus")]
    namedlocus,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("no-variation")]
    novariation,
    
    /// <remarks/>
    mixed,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("multinucleotide-polymorphism")]
    multinucleotidepolymorphism,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum RsSnpType {
    
    /// <remarks/>
    notwithdrawn,
    
    /// <remarks/>
    artifact,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("gene-duplication")]
    geneduplication,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("duplicate-submission")]
    duplicatesubmission,
    
    /// <remarks/>
    notspecified,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("ambiguous-location")]
    ambiguouslocation,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("low-map-quality")]
    lowmapquality,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum RsMolType {
    
    /// <remarks/>
    genomic,
    
    /// <remarks/>
    cDNA,
    
    /// <remarks/>
    mito,
    
    /// <remarks/>
    chloro,
    
    /// <remarks/>
    unknown,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class RsHet {
    
    private RsHetType typeField;
    
    private float valueField;
    
    private float stdErrorField;
    
    private bool stdErrorSpecifiedField;
    
    /// <remarks>
///Est=Estimated average het from allele
///									frequencies, Obs=Observed from genotype data
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public RsHetType type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks>
///Heterozygosity
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public float value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks>
///Standard error of Het
///									estimate
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public float stdError {
        get {
            return this.stdErrorField;
        }
        set {
            this.stdErrorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool stdErrorSpecified {
        get {
            return this.stdErrorSpecifiedField;
        }
        set {
            this.stdErrorSpecifiedField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum RsHetType {
    
    /// <remarks/>
    est,
    
    /// <remarks/>
    obs,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class RsValidation {
    
    private bool byClusterField;
    
    private bool byClusterSpecifiedField;
    
    private bool byFrequencyField;
    
    private bool byFrequencySpecifiedField;
    
    private bool byOtherPopField;
    
    private bool byOtherPopSpecifiedField;
    
    private bool by2Hit2AlleleField;
    
    private bool by2Hit2AlleleSpecifiedField;
    
    private bool byHapMapField;
    
    private bool byHapMapSpecifiedField;
    
    private bool by1000GField;
    
    private bool by1000GSpecifiedField;
    
    private bool suspectField;
    
    private bool suspectSpecifiedField;
    
    private int[] otherPopBatchIdField;
    
    private int[] twoHit2AlleleBatchIdField;
    
    private int[] frequencyClassField;
    
    private int[] hapMapPhaseField;
    
    private int[] tGPPhaseField;
    
    private string[] suspectEvidenceField;
    
    /// <remarks>
///at least one subsnp in cluster has frequency data
///									submitted
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public bool byCluster {
        get {
            return this.byClusterField;
        }
        set {
            this.byClusterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool byClusterSpecified {
        get {
            return this.byClusterSpecifiedField;
        }
        set {
            this.byClusterSpecifiedField = value;
        }
    }
    
    /// <remarks>
///Validated by allele frequency
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public bool byFrequency {
        get {
            return this.byFrequencyField;
        }
        set {
            this.byFrequencyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool byFrequencySpecified {
        get {
            return this.byFrequencySpecifiedField;
        }
        set {
            this.byFrequencySpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public bool byOtherPop {
        get {
            return this.byOtherPopField;
        }
        set {
            this.byOtherPopField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool byOtherPopSpecified {
        get {
            return this.byOtherPopSpecifiedField;
        }
        set {
            this.byOtherPopSpecifiedField = value;
        }
    }
    
    /// <remarks>
///cluster has 2+ submissions, with 1+ submissions
///									assayed with a non-computational method
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public bool by2Hit2Allele {
        get {
            return this.by2Hit2AlleleField;
        }
        set {
            this.by2Hit2AlleleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool by2Hit2AlleleSpecified {
        get {
            return this.by2Hit2AlleleSpecifiedField;
        }
        set {
            this.by2Hit2AlleleSpecifiedField = value;
        }
    }
    
    /// <remarks>
///Validated by HapMap Project 
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public bool byHapMap {
        get {
            return this.byHapMapField;
        }
        set {
            this.byHapMapField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool byHapMapSpecified {
        get {
            return this.byHapMapSpecifiedField;
        }
        set {
            this.byHapMapSpecifiedField = value;
        }
    }
    
    /// <remarks>
///Validated by 1000 Genomes Project
///								
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public bool by1000G {
        get {
            return this.by1000GField;
        }
        set {
            this.by1000GField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool by1000GSpecified {
        get {
            return this.by1000GSpecifiedField;
        }
        set {
            this.by1000GSpecifiedField = value;
        }
    }
    
    /// <remarks>
///Suspected to be false SNP
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public bool suspect {
        get {
            return this.suspectField;
        }
        set {
            this.suspectField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool suspectSpecified {
        get {
            return this.suspectSpecifiedField;
        }
        set {
            this.suspectSpecifiedField = value;
        }
    }
    
    /// <remarks>
///dbSNP batch-id's for other pop snp validation
///										data.
///</remarks>
    [System.Xml.Serialization.XmlElementAttribute("otherPopBatchId")]
    public int[] otherPopBatchId {
        get {
            return this.otherPopBatchIdField;
        }
        set {
            this.otherPopBatchIdField = value;
        }
    }
    
    /// <remarks>
///dbSNP batch-id's for double-hit snp
///										validation data. Use batch-id to get methods, etc.
///									
///</remarks>
    [System.Xml.Serialization.XmlElementAttribute("twoHit2AlleleBatchId")]
    public int[] twoHit2AlleleBatchId {
        get {
            return this.twoHit2AlleleBatchIdField;
        }
        set {
            this.twoHit2AlleleBatchIdField = value;
        }
    }
    
    /// <remarks>
///Frequency validation class (1) low frequency
///										variation that is cited in journal and other reputable
///										sources (2) greater than 5 percent minor allele freq in each
///										and all populations (4) greater than 5 percent minor allele
///										freq in 1+ populations (8) if the variant has 2+ minor
///										allele count based on freq or genotype data (16) less than 1
///										percent minor allele freq in each and all populations (32)
///										less than 1 percent minor freq in 1+ populations
///									
///</remarks>
    [System.Xml.Serialization.XmlElementAttribute("FrequencyClass")]
    public int[] FrequencyClass {
        get {
            return this.frequencyClassField;
        }
        set {
            this.frequencyClassField = value;
        }
    }
    
    /// <remarks>
///alidated by HapMap Project phase1-genotyped
///										(1), Phase 1 genotyped; filtered, non-redundant
///										phase2-genotyped (2), Phase 2 genotyped; filtered,
///										non-redundant phase3-genotyped (4) Phase 3 genotyped;
///										filtered, non-redundant 
///</remarks>
    [System.Xml.Serialization.XmlElementAttribute("HapMapPhase")]
    public int[] HapMapPhase {
        get {
            return this.hapMapPhaseField;
        }
        set {
            this.hapMapPhaseField = value;
        }
    }
    
    /// <remarks>
///Validated by 1000 Genomes Project (TGP) pilot
///										1 (1), pilot 2 (2), pilot 3 (4) 
///</remarks>
    [System.Xml.Serialization.XmlElementAttribute("TGPPhase")]
    public int[] TGPPhase {
        get {
            return this.tGPPhaseField;
        }
        set {
            this.tGPPhaseField = value;
        }
    }
    
    /// <remarks>
///Suspected to be false SNP evidence Single
///										Nucleotide Difference - paralogous genes (1), Genotype or
///										base calling errors (2), Submission evidence or errors (4),
///										Others (8) 
///</remarks>
    [System.Xml.Serialization.XmlElementAttribute("SuspectEvidence")]
    public string[] SuspectEvidence {
        get {
            return this.suspectEvidenceField;
        }
        set {
            this.suspectEvidenceField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class RsCreate {
    
    private int buildField;
    
    private bool buildSpecifiedField;
    
    private string dateField;
    
    /// <remarks>
///build number when the cluster was
///									created
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int build {
        get {
            return this.buildField;
        }
        set {
            this.buildField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool buildSpecified {
        get {
            return this.buildSpecifiedField;
        }
        set {
            this.buildSpecifiedField = value;
        }
    }
    
    /// <remarks>
///yyyy-mm-dd
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string date {
        get {
            return this.dateField;
        }
        set {
            this.dateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class RsUpdate {
    
    private int buildField1;
    
    private bool buildSpecifiedField1;
    
    private string dateField1;
    
    /// <remarks>
///build number when the cluster was
///									updated
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int build {
        get {
            return this.buildField1;
        }
        set {
            this.buildField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool buildSpecified {
        get {
            return this.buildSpecifiedField1;
        }
        set {
            this.buildSpecifiedField1 = value;
        }
    }
    
    /// <remarks>
///yyyy-mm-dd
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string date {
        get {
            return this.dateField1;
        }
        set {
            this.dateField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class RsSequence {
    
    private int exemplarSsField;
    
    private string ancestralAlleleField;
    
    private string seq5Field;
    
    private string observedField;
    
    private string seq3Field;
    
    /// <remarks>
///dbSNP ss# selected as source of refSNP flanking
///									sequence, ss# part of ss-list below 
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int exemplarSs {
        get {
            return this.exemplarSsField;
        }
        set {
            this.exemplarSsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string ancestralAllele {
        get {
            return this.ancestralAlleleField;
        }
        set {
            this.ancestralAlleleField = value;
        }
    }
    
    /// <remarks>
///5' sequence that flanks the
///										variation
///</remarks>
    public string Seq5 {
        get {
            return this.seq5Field;
        }
        set {
            this.seq5Field = value;
        }
    }
    
    /// <remarks>
///list of all nucleotide alleles observed in
///										ss-list members, correcting for reverse complementation of
///										members reported in reverse orientation
///</remarks>
    public string Observed {
        get {
            return this.observedField;
        }
        set {
            this.observedField = value;
        }
    }
    
    /// <remarks>
///3' sequence that flanks the
///										variation
///</remarks>
    public string Seq3 {
        get {
            return this.seq3Field;
        }
        set {
            this.seq3Field = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class Ss {
    
    private int ssIdField;
    
    private string handleField;
    
    private int batchIdField;
    
    private string locSnpIdField;
    
    private SsSubSnpClass subSnpClassField;
    
    private bool subSnpClassSpecifiedField;
    
    private SsOrient orientField;
    
    private bool orientSpecifiedField;
    
    private SsStrand strandField;
    
    private bool strandSpecifiedField;
    
    private SsMolType molTypeField1;
    
    private bool molTypeSpecifiedField;
    
    private int buildIdField;
    
    private bool buildIdSpecifiedField;
    
    private SsMethodClass methodClassField;
    
    private bool methodClassSpecifiedField;
    
    private SsValidated validatedField;
    
    private bool validatedSpecifiedField;
    
    private string linkoutUrlField;
    
    private string ssAliasField;
    
    private string alleleOriginField;
    
    private string clinicalSignificanceField;
    
    private SsSequence sequenceField1;
    
    /// <remarks>
///dbSNP accession number for submission
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int ssId {
        get {
            return this.ssIdField;
        }
        set {
            this.ssIdField = value;
        }
    }
    
    /// <remarks>
///Tag for the submitting laboratory
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string handle {
        get {
            return this.handleField;
        }
        set {
            this.handleField = value;
        }
    }
    
    /// <remarks>
///dbSNP number for batch submission
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int batchId {
        get {
            return this.batchIdField;
        }
        set {
            this.batchIdField = value;
        }
    }
    
    /// <remarks>
///submission (ss#) submitter ID
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string locSnpId {
        get {
            return this.locSnpIdField;
        }
        set {
            this.locSnpIdField = value;
        }
    }
    
    /// <remarks>
///SubSNP classification by type of
///						variation
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public SsSubSnpClass subSnpClass {
        get {
            return this.subSnpClassField;
        }
        set {
            this.subSnpClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool subSnpClassSpecified {
        get {
            return this.subSnpClassSpecifiedField;
        }
        set {
            this.subSnpClassSpecifiedField = value;
        }
    }
    
    /// <remarks>
///orientation of refsnp cluster members to refsnp cluster
///						sequence
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public SsOrient orient {
        get {
            return this.orientField;
        }
        set {
            this.orientField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool orientSpecified {
        get {
            return this.orientSpecifiedField;
        }
        set {
            this.orientSpecifiedField = value;
        }
    }
    
    /// <remarks>
///strand is defined as TOP/BOTTOM by nature of flanking
///						nucleotide sequence
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public SsStrand strand {
        get {
            return this.strandField;
        }
        set {
            this.strandField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool strandSpecified {
        get {
            return this.strandSpecifiedField;
        }
        set {
            this.strandSpecifiedField = value;
        }
    }
    
    /// <remarks>
///moltype from Batch table
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public SsMolType molType {
        get {
            return this.molTypeField1;
        }
        set {
            this.molTypeField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool molTypeSpecified {
        get {
            return this.molTypeSpecifiedField;
        }
        set {
            this.molTypeSpecifiedField = value;
        }
    }
    
    /// <remarks>
///dbSNP build number when ss# was added to a refSNP (rs#)
///						cluster
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int buildId {
        get {
            return this.buildIdField;
        }
        set {
            this.buildIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool buildIdSpecified {
        get {
            return this.buildIdSpecifiedField;
        }
        set {
            this.buildIdSpecifiedField = value;
        }
    }
    
    /// <remarks>
///class of method used to assay for the
///						variation
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public SsMethodClass methodClass {
        get {
            return this.methodClassField;
        }
        set {
            this.methodClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool methodClassSpecified {
        get {
            return this.methodClassSpecifiedField;
        }
        set {
            this.methodClassSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public SsValidated validated {
        get {
            return this.validatedField;
        }
        set {
            this.validatedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool validatedSpecified {
        get {
            return this.validatedSpecifiedField;
        }
        set {
            this.validatedSpecifiedField = value;
        }
    }
    
    /// <remarks>
///append loc-snp-id to this base URL to construct a pointer to
///						submitter data.
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string linkoutUrl {
        get {
            return this.linkoutUrlField;
        }
        set {
            this.linkoutUrlField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string ssAlias {
        get {
            return this.ssAliasField;
        }
        set {
            this.ssAliasField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string alleleOrigin {
        get {
            return this.alleleOriginField;
        }
        set {
            this.alleleOriginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string clinicalSignificance {
        get {
            return this.clinicalSignificanceField;
        }
        set {
            this.clinicalSignificanceField = value;
        }
    }
    
    /// <remarks/>
    public SsSequence Sequence {
        get {
            return this.sequenceField1;
        }
        set {
            this.sequenceField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum SsSubSnpClass {
    
    /// <remarks/>
    snp,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("in-del")]
    indel,
    
    /// <remarks/>
    heterozygous,
    
    /// <remarks/>
    microsatellite,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("named-locus")]
    namedlocus,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("no-variation")]
    novariation,
    
    /// <remarks/>
    mixed,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("multinucleotide-polymorphism")]
    multinucleotidepolymorphism,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum SsOrient {
    
    /// <remarks>
///ss flanking sequence is in same orientation as
///									seq-ss-exemplar
///</remarks>
    forward,
    
    /// <remarks>
///flanking sequence and alleles are reverse
///									complement of refSNP as defined by ss exemplar
///								
///</remarks>
    reverse,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum SsStrand {
    
    /// <remarks/>
    top,
    
    /// <remarks/>
    bottom,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum SsMolType {
    
    /// <remarks/>
    genomic,
    
    /// <remarks/>
    cDNA,
    
    /// <remarks/>
    mito,
    
    /// <remarks/>
    chloro,
    
    /// <remarks/>
    unknown,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum SsMethodClass {
    
    /// <remarks>
///Denaturing High Pressure Liquid Chromatography
///									used to detect SNP
///</remarks>
    DHPLC,
    
    /// <remarks>
///a hybridization method (e.g. chip) was used to
///									assay for variation
///</remarks>
    hybridize,
    
    /// <remarks>
///variation was mined from sequence alignment with
///									software
///</remarks>
    computed,
    
    /// <remarks/>
    SSCP,
    
    /// <remarks/>
    other,
    
    /// <remarks/>
    unknown,
    
    /// <remarks/>
    RFLP,
    
    /// <remarks>
///samples were sequenced and resulting alignment
///									used to define variation
///</remarks>
    sequence,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum SsValidated {
    
    /// <remarks>
///subsnp has been experimentally validated by
///									submitter
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("by-submitter")]
    bysubmitter,
    
    /// <remarks>
///subsnp has frequency data
///									submitted
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("by-frequency")]
    byfrequency,
    
    /// <remarks>
///has 2+ submissions, with 1+ submission assayed
///									with a non-computational method
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("by-cluster")]
    bycluster,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class SsSequence {
    
    private string seq5Field1;
    
    private string observedField1;
    
    private string seq3Field1;
    
    /// <remarks>
///5' sequence that flanks the
///										variation
///</remarks>
    public string Seq5 {
        get {
            return this.seq5Field1;
        }
        set {
            this.seq5Field1 = value;
        }
    }
    
    /// <remarks>
///list of all nucleotide alleles observed in
///										ss-list members, correcting for reverse complementation of
///										memebers reported in reverse orientation
///</remarks>
    public string Observed {
        get {
            return this.observedField1;
        }
        set {
            this.observedField1 = value;
        }
    }
    
    /// <remarks>
///3' sequence that flanks the
///										variation
///</remarks>
    public string Seq3 {
        get {
            return this.seq3Field1;
        }
        set {
            this.seq3Field1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class Assembly {
    
    private int dbSnpBuildField1;
    
    private string genomeBuildField;
    
    private string groupLabelField;
    
    private string assemblySourceField;
    
    private bool currentField;
    
    private bool currentSpecifiedField;
    
    private bool referenceField;
    
    private bool referenceSpecifiedField;
    
    private Component[] componentField;
    
    private AssemblySnpStat snpStatField;
    
    /// <remarks>
///dbSNP build number defining the rsid set aligned to this
///						assembly
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int dbSnpBuild {
        get {
            return this.dbSnpBuildField1;
        }
        set {
            this.dbSnpBuildField1 = value;
        }
    }
    
    /// <remarks>
///assembly build number with possible 'subbuild' version
///						numbers to reflect updates in gene annotation (human e.g. 34_3, 35_1,
///						36_1)
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string genomeBuild {
        get {
            return this.genomeBuildField;
        }
        set {
            this.genomeBuildField = value;
        }
    }
    
    /// <remarks>
///High-level classification of the assembly to distinguish
///						reference projects from alternate solutions. GroupLabel field from
///						organism/build-specific ContigInfo tables. "reference" is occasionally used
///						as the preferred assembly; standards will converge as additional organism
///						genome projects are finished. Note that some organism assembly names include
///						extended characters like '~' and '/' that may be incompatible with OS
///						filename conventions.
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string groupLabel {
        get {
            return this.groupLabelField;
        }
        set {
            this.groupLabelField = value;
        }
    }
    
    /// <remarks>
///Name of the group(s) or organization(s) that generated the
///						assembly
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string assemblySource {
        get {
            return this.assemblySourceField;
        }
        set {
            this.assemblySourceField = value;
        }
    }
    
    /// <remarks>
///Marks the current genomic assembly
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public bool current {
        get {
            return this.currentField;
        }
        set {
            this.currentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool currentSpecified {
        get {
            return this.currentSpecifiedField;
        }
        set {
            this.currentSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public bool reference {
        get {
            return this.referenceField;
        }
        set {
            this.referenceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool referenceSpecified {
        get {
            return this.referenceSpecifiedField;
        }
        set {
            this.referenceSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Component")]
    public Component[] Component {
        get {
            return this.componentField;
        }
        set {
            this.componentField = value;
        }
    }
    
    /// <remarks/>
    public AssemblySnpStat SnpStat {
        get {
            return this.snpStatField;
        }
        set {
            this.snpStatField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class Component {
    
    private ComponentComponentType componentTypeField;
    
    private bool componentTypeSpecifiedField;
    
    private int ctgIdField;
    
    private bool ctgIdSpecifiedField;
    
    private string accessionField;
    
    private string nameField;
    
    private string chromosomeField;
    
    private int startField;
    
    private bool startSpecifiedField;
    
    private int endField;
    
    private bool endSpecifiedField;
    
    private ComponentOrientation orientationField;
    
    private bool orientationSpecifiedField;
    
    private string giField;
    
    private string groupTermField;
    
    private string contigLabelField;
    
    private MapLoc[] mapLocField;
    
    /// <remarks>
///type of component: chromosome, contig, gene_region,
///						etc.
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public ComponentComponentType componentType {
        get {
            return this.componentTypeField;
        }
        set {
            this.componentTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool componentTypeSpecified {
        get {
            return this.componentTypeSpecifiedField;
        }
        set {
            this.componentTypeSpecifiedField = value;
        }
    }
    
    /// <remarks>
///dbSNP contig_id used to join on contig hit / mapset data to
///						these assembly properties
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int ctgId {
        get {
            return this.ctgIdField;
        }
        set {
            this.ctgIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool ctgIdSpecified {
        get {
            return this.ctgIdSpecifiedField;
        }
        set {
            this.ctgIdSpecifiedField = value;
        }
    }
    
    /// <remarks>
///Accession[.version] for the sequence
///						component
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string accession {
        get {
            return this.accessionField;
        }
        set {
            this.accessionField = value;
        }
    }
    
    /// <remarks>
///contig name defined as either a submitter local id, element
///						of a whole genome assembly set, or internal NCBI local
///						id
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks>
///Organism appropriate chromosome tag, 'Un' reserved for
///						default case of unplaced components
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string chromosome {
        get {
            return this.chromosomeField;
        }
        set {
            this.chromosomeField = value;
        }
    }
    
    /// <remarks>
///component starting position on the chromosome (base 0
///						inclusive)
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int start {
        get {
            return this.startField;
        }
        set {
            this.startField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool startSpecified {
        get {
            return this.startSpecifiedField;
        }
        set {
            this.startSpecifiedField = value;
        }
    }
    
    /// <remarks>
///component ending position on the chromosome (base 0
///						inclusive)
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int end {
        get {
            return this.endField;
        }
        set {
            this.endField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool endSpecified {
        get {
            return this.endSpecifiedField;
        }
        set {
            this.endSpecifiedField = value;
        }
    }
    
    /// <remarks>
///orientation of this component to chromosome, forward (fwd) =
///						0, reverse (rev) = 1, unknown = NULL in
///						ContigInfo.orient.
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public ComponentOrientation orientation {
        get {
            return this.orientationField;
        }
        set {
            this.orientationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool orientationSpecified {
        get {
            return this.orientationSpecifiedField;
        }
        set {
            this.orientationSpecifiedField = value;
        }
    }
    
    /// <remarks>
///NCBI gi for component sequence (equivalent to
///						accession.version) for nucleotide sequence.
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string gi {
        get {
            return this.giField;
        }
        set {
            this.giField = value;
        }
    }
    
    /// <remarks>
///Identifier label for the genome assembly that defines the
///						contigs in this mapset and their placement within the organism genome.
///					
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string groupTerm {
        get {
            return this.groupTermField;
        }
        set {
            this.groupTermField = value;
        }
    }
    
    /// <remarks>
///Display label for component
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string contigLabel {
        get {
            return this.contigLabelField;
        }
        set {
            this.contigLabelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MapLoc")]
    public MapLoc[] MapLoc {
        get {
            return this.mapLocField;
        }
        set {
            this.mapLocField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum ComponentComponentType {
    
    /// <remarks/>
    contig,
    
    /// <remarks/>
    mrna,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum ComponentOrientation {
    
    /// <remarks/>
    fwd,
    
    /// <remarks/>
    rev,
    
    /// <remarks/>
    unknown,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class MapLoc {
    
    private string asnFromField;
    
    private string asnToField;
    
    private MapLocLocType locTypeField;
    
    private double alnQualityField;
    
    private bool alnQualitySpecifiedField;
    
    private MapLocOrient orientField1;
    
    private bool orientSpecifiedField1;
    
    private int physMapIntField;
    
    private bool physMapIntSpecifiedField;
    
    private int leftFlankNeighborPosField;
    
    private bool leftFlankNeighborPosSpecifiedField;
    
    private int rightFlankNeighborPosField;
    
    private bool rightFlankNeighborPosSpecifiedField;
    
    private int leftContigNeighborPosField;
    
    private bool leftContigNeighborPosSpecifiedField;
    
    private int rightContigNeighborPosField;
    
    private bool rightContigNeighborPosSpecifiedField;
    
    private int numberOfMismatchesField;
    
    private bool numberOfMismatchesSpecifiedField;
    
    private int numberOfDeletionsField;
    
    private bool numberOfDeletionsSpecifiedField;
    
    private int numberOfInsertionsField;
    
    private bool numberOfInsertionsSpecifiedField;
    
    private FxnSet[] fxnSetField;
    
    /// <remarks>
///beginning of variation as feature on
///						contig
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string asnFrom {
        get {
            return this.asnFromField;
        }
        set {
            this.asnFromField = value;
        }
    }
    
    /// <remarks>
///end position of variation as feature on
///						contig
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string asnTo {
        get {
            return this.asnToField;
        }
        set {
            this.asnToField = value;
        }
    }
    
    /// <remarks>
///defines the seq-loc symbol if asn_from !=
///						asn_to
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public MapLocLocType locType {
        get {
            return this.locTypeField;
        }
        set {
            this.locTypeField = value;
        }
    }
    
    /// <remarks>
///alignment qualiity
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public double alnQuality {
        get {
            return this.alnQualityField;
        }
        set {
            this.alnQualityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool alnQualitySpecified {
        get {
            return this.alnQualitySpecifiedField;
        }
        set {
            this.alnQualitySpecifiedField = value;
        }
    }
    
    /// <remarks>
///orientation of refSNP sequence to contig
///						sequence
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public MapLocOrient orient {
        get {
            return this.orientField1;
        }
        set {
            this.orientField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool orientSpecified {
        get {
            return this.orientSpecifiedField1;
        }
        set {
            this.orientSpecifiedField1 = value;
        }
    }
    
    /// <remarks>
///chromosome position as integer for
///						sorting
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int physMapInt {
        get {
            return this.physMapIntField;
        }
        set {
            this.physMapIntField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool physMapIntSpecified {
        get {
            return this.physMapIntSpecifiedField;
        }
        set {
            this.physMapIntSpecifiedField = value;
        }
    }
    
    /// <remarks>
///nearest aligned position in 5' flanking sequence of
///						snp
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int leftFlankNeighborPos {
        get {
            return this.leftFlankNeighborPosField;
        }
        set {
            this.leftFlankNeighborPosField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool leftFlankNeighborPosSpecified {
        get {
            return this.leftFlankNeighborPosSpecifiedField;
        }
        set {
            this.leftFlankNeighborPosSpecifiedField = value;
        }
    }
    
    /// <remarks>
///nearest aligned position in 3' flanking sequence of snp
///					
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int rightFlankNeighborPos {
        get {
            return this.rightFlankNeighborPosField;
        }
        set {
            this.rightFlankNeighborPosField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool rightFlankNeighborPosSpecified {
        get {
            return this.rightFlankNeighborPosSpecifiedField;
        }
        set {
            this.rightFlankNeighborPosSpecifiedField = value;
        }
    }
    
    /// <remarks>
///nearest aligned position in 5' contig alignment of
///						snp
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int leftContigNeighborPos {
        get {
            return this.leftContigNeighborPosField;
        }
        set {
            this.leftContigNeighborPosField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool leftContigNeighborPosSpecified {
        get {
            return this.leftContigNeighborPosSpecifiedField;
        }
        set {
            this.leftContigNeighborPosSpecifiedField = value;
        }
    }
    
    /// <remarks>
///nearest aligned position in 3' contig alignment of
///						snp
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int rightContigNeighborPos {
        get {
            return this.rightContigNeighborPosField;
        }
        set {
            this.rightContigNeighborPosField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool rightContigNeighborPosSpecified {
        get {
            return this.rightContigNeighborPosSpecifiedField;
        }
        set {
            this.rightContigNeighborPosSpecifiedField = value;
        }
    }
    
    /// <remarks>
///number of Mismatched positions in this
///						alignment
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int numberOfMismatches {
        get {
            return this.numberOfMismatchesField;
        }
        set {
            this.numberOfMismatchesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool numberOfMismatchesSpecified {
        get {
            return this.numberOfMismatchesSpecifiedField;
        }
        set {
            this.numberOfMismatchesSpecifiedField = value;
        }
    }
    
    /// <remarks>
///number of deletions in this alignment
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int numberOfDeletions {
        get {
            return this.numberOfDeletionsField;
        }
        set {
            this.numberOfDeletionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool numberOfDeletionsSpecified {
        get {
            return this.numberOfDeletionsSpecifiedField;
        }
        set {
            this.numberOfDeletionsSpecifiedField = value;
        }
    }
    
    /// <remarks>
///number of insetions in this alignment
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int numberOfInsertions {
        get {
            return this.numberOfInsertionsField;
        }
        set {
            this.numberOfInsertionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool numberOfInsertionsSpecified {
        get {
            return this.numberOfInsertionsSpecifiedField;
        }
        set {
            this.numberOfInsertionsSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FxnSet")]
    public FxnSet[] FxnSet {
        get {
            return this.fxnSetField;
        }
        set {
            this.fxnSetField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum MapLocLocType {
    
    /// <remarks>
///insertion on contig
///</remarks>
    insertion,
    
    /// <remarks>
///asn-from = asn-to write as
///									'asn-from'
///</remarks>
    exact,
    
    /// <remarks>
///deletion on contig
///</remarks>
    deletion,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("range-ins")]
    rangeins,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("range-exact")]
    rangeexact,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("range-del")]
    rangedel,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum MapLocOrient {
    
    /// <remarks/>
    forward,
    
    /// <remarks/>
    reverse,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class FxnSet {
    
    private int geneIdField;
    
    private bool geneIdSpecifiedField;
    
    private string symbolField;
    
    private string mrnaAccField;
    
    private int mrnaVerField;
    
    private bool mrnaVerSpecifiedField;
    
    private string protAccField;
    
    private int protVerField;
    
    private bool protVerSpecifiedField;
    
    private FxnSetFxnClass fxnClassField;
    
    private bool fxnClassSpecifiedField;
    
    private int readingFrameField;
    
    private bool readingFrameSpecifiedField;
    
    private string alleleField;
    
    private string residueField;
    
    private int aaPositionField;
    
    private bool aaPositionSpecifiedField;
    
    private int mrnaPositionField;
    
    private bool mrnaPositionSpecifiedField;
    
    /// <remarks>
///gene-id of gene as aligned to contig
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int geneId {
        get {
            return this.geneIdField;
        }
        set {
            this.geneIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool geneIdSpecified {
        get {
            return this.geneIdSpecifiedField;
        }
        set {
            this.geneIdSpecifiedField = value;
        }
    }
    
    /// <remarks>
///symbol (official if present in Entrez Gene) of
///						gene
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string symbol {
        get {
            return this.symbolField;
        }
        set {
            this.symbolField = value;
        }
    }
    
    /// <remarks>
///mRNA accession if variation in transcript
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string mrnaAcc {
        get {
            return this.mrnaAccField;
        }
        set {
            this.mrnaAccField = value;
        }
    }
    
    /// <remarks>
///mRNA sequence version if variation is in
///						transcripot
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int mrnaVer {
        get {
            return this.mrnaVerField;
        }
        set {
            this.mrnaVerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool mrnaVerSpecified {
        get {
            return this.mrnaVerSpecifiedField;
        }
        set {
            this.mrnaVerSpecifiedField = value;
        }
    }
    
    /// <remarks>
///protein accession if variation in protein
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string protAcc {
        get {
            return this.protAccField;
        }
        set {
            this.protAccField = value;
        }
    }
    
    /// <remarks>
///protein version if variation is in
///						protein
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int protVer {
        get {
            return this.protVerField;
        }
        set {
            this.protVerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool protVerSpecified {
        get {
            return this.protVerSpecifiedField;
        }
        set {
            this.protVerSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public FxnSetFxnClass fxnClass {
        get {
            return this.fxnClassField;
        }
        set {
            this.fxnClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool fxnClassSpecified {
        get {
            return this.fxnClassSpecifiedField;
        }
        set {
            this.fxnClassSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int readingFrame {
        get {
            return this.readingFrameField;
        }
        set {
            this.readingFrameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool readingFrameSpecified {
        get {
            return this.readingFrameSpecifiedField;
        }
        set {
            this.readingFrameSpecifiedField = value;
        }
    }
    
    /// <remarks>
///variation allele: * suffix indicates allele of contig at this
///						location
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string allele {
        get {
            return this.alleleField;
        }
        set {
            this.alleleField = value;
        }
    }
    
    /// <remarks>
///translated amino acid residue for allele
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string residue {
        get {
            return this.residueField;
        }
        set {
            this.residueField = value;
        }
    }
    
    /// <remarks>
///position of the variant residue in peptide
///						sequence
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int aaPosition {
        get {
            return this.aaPositionField;
        }
        set {
            this.aaPositionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool aaPositionSpecified {
        get {
            return this.aaPositionSpecifiedField;
        }
        set {
            this.aaPositionSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int mrnaPosition {
        get {
            return this.mrnaPositionField;
        }
        set {
            this.mrnaPositionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool mrnaPositionSpecified {
        get {
            return this.mrnaPositionSpecifiedField;
        }
        set {
            this.mrnaPositionSpecifiedField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum FxnSetFxnClass {
    
    /// <remarks>
///variation in region of gene, but not in
///										transcript - deprecated
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("locus-region")]
    locusregion,
    
    /// <remarks>
///Deprecated!
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("coding-unknown")]
    codingunknown,
    
    /// <remarks>
///
///										Sequence Ontology (SO) ID:0001588
///										Replaced dbSNP term: cds-synon
///									
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("synonymous-codon")]
    synonymouscodon,
    
    /// <remarks>
///
///										Sequence Ontology (SO) ID:0001583
///										Replaced dbSNP term: missense
///									
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("non-synonymous-codon")]
    nonsynonymouscodon,
    
    /// <remarks>
/// untranslated region - deprecated
///									
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("mrna-utr")]
    mrnautr,
    
    /// <remarks>
///
///										Sequence Ontology (SO) ID:0001627
///										Replaced dbSNP term: intron
///									
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("intron-variant")]
    intronvariant,
    
    /// <remarks>
///
///										Sequence Ontology (SO) ID:0001630
///									
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("splice-region-variant")]
    spliceregionvariant,
    
    /// <remarks>
/// contig reference 
///</remarks>
    reference,
    
    /// <remarks>
/// deprecated 
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("coding-exception")]
    codingexception,
    
    /// <remarks>
///
///										Sequence Ontology (SO) ID:0001580
///										Replaced dbSNP term: synonymy-unknown
///									
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("coding-sequence-variant")]
    codingsequencevariant,
    
    /// <remarks>
///
///										Sequence Ontology (SO) ID:0001619
///										Replaced dbSNP term: gene-segment
///									
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("nc-transcript-variant")]
    nctranscriptvariant,
    
    /// <remarks>
///
///										Sequence Ontology (SO) ID:0001634
///										Replaced dbSNP term: near-gene-3
///										NOTE: replace SO term 500B_downstream_variant with downstream_variant_500B since number beginning of string not supported
///									
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("downstream-variant-500B")]
    downstreamvariant500B,
    
    /// <remarks>
///
///										Sequence Ontology (SO) ID:0001636
///										Replaced dbSNP term: near-gene-5
///										NOTE: replace SO term 2KB_upstream_variant with upstream_variant_2KB since number beginning of string not supported
///									
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("upstream-variant-2KB")]
    upstreamvariant2KB,
    
    /// <remarks>
///
///										Sequence Ontology (SO) ID:0001587
///										Replaced dbSNP term: nonsense
///									
///</remarks>
    nonsense,
    
    /// <remarks>
/// alters codon to make an altered amino acid in
///										protein product. 
///</remarks>
    missense,
    
    /// <remarks>
///
///										Sequence Ontology (SO) ID:0001589
///										Replaced dbSNP term: frameshift
///									
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("frameshift-variant")]
    frameshiftvariant,
    
    /// <remarks>
///
///										Sequence Ontology (SO) ID:0001624
///										Replaced dbSNP term: untranslated-3
///										NOTE: replace SO term 3_prime_UTR_variant with UTR_variant_3_prime since number beginning of string not supported
///									
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("utr-variant-3-prime")]
    utrvariant3prime,
    
    /// <remarks>
///
///									Sequence Ontology (SO) ID:0001635
///									Replace dbSNP utr-5
///									NOTE: replace SO term 5KB_upstream_variant with upstream_variant_5KB since number beginning of string not supported
///								
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("utr-variant-5-prime")]
    utrvariant5prime,
    
    /// <remarks>
///
///										Sequence Ontology (SO) ID:0001574
///										Replaced dbSNP term: splice-3
///									
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("splice-acceptor-variant")]
    spliceacceptorvariant,
    
    /// <remarks>
///
///										Sequence Ontology (SO) ID:0001575
///										Replaced dbSNP term: splice-5
///									
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("splice-donor-variant")]
    splicedonorvariant,
    
    /// <remarks>
///indel snp with length of multiple of 3bp, not
///										causing frameshift.>
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("cds-indel")]
    cdsindel,
    
    /// <remarks>
///
///									Sequence Ontology (SO) ID:0001633
///									NOTE: replace SO term 5KB_downstream_variant with downstream_variant_5KB since number beginning of string not supported
///								
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("stop-gained")]
    stopgained,
    
    /// <remarks>
///
///									Sequence Ontology (SO) ID:0001578
///								
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("stop-lost")]
    stoplost,
    
    /// <remarks>
///
///									Sequence Ontology (SO) ID:0001577
///								
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("complex-change-in-transcript")]
    complexchangeintranscript,
    
    /// <remarks>
///
///									Sequence Ontology (SO) ID: 0001626
///								
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("incomplete-terminal-codon-variant")]
    incompleteterminalcodonvariant,
    
    /// <remarks>
///
///									Sequence Ontology (SO) ID: 0001621
///								
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("nmd-transcript-variant")]
    nmdtranscriptvariant,
    
    /// <remarks>
///
///									Sequence Ontology (SO) ID: 0001620
///								
///</remarks>
    [System.Xml.Serialization.XmlEnumAttribute("mature-miRNA-variant")]
    maturemiRNAvariant,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("upstream-variant-5KB")]
    upstreamvariant5KB,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("downstream-variant-5KB")]
    downstreamvariant5KB,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class AssemblySnpStat {
    
    private AssemblySnpStatMapWeight mapWeightField;
    
    private int chromCountField;
    
    private bool chromCountSpecifiedField;
    
    private int placedContigCountField;
    
    private bool placedContigCountSpecifiedField;
    
    private int unplacedContigCountField;
    
    private bool unplacedContigCountSpecifiedField;
    
    private int seqlocCountField;
    
    private bool seqlocCountSpecifiedField;
    
    private int hapCountField;
    
    private bool hapCountSpecifiedField;
    
    /// <remarks>
///summary measure of placement precision in the
///									assembly
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public AssemblySnpStatMapWeight mapWeight {
        get {
            return this.mapWeightField;
        }
        set {
            this.mapWeightField = value;
        }
    }
    
    /// <remarks>
///number of distinct chromosomes in the
///									mapset
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int chromCount {
        get {
            return this.chromCountField;
        }
        set {
            this.chromCountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool chromCountSpecified {
        get {
            return this.chromCountSpecifiedField;
        }
        set {
            this.chromCountSpecifiedField = value;
        }
    }
    
    /// <remarks>
///number of distinct contigs [ gi |
///									accession[.version] ] in the mapset
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int placedContigCount {
        get {
            return this.placedContigCountField;
        }
        set {
            this.placedContigCountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool placedContigCountSpecified {
        get {
            return this.placedContigCountSpecifiedField;
        }
        set {
            this.placedContigCountSpecifiedField = value;
        }
    }
    
    /// <remarks>
///number of sequence postions to a contig with
///									unknown chromosomal assignment
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int unplacedContigCount {
        get {
            return this.unplacedContigCountField;
        }
        set {
            this.unplacedContigCountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool unplacedContigCountSpecified {
        get {
            return this.unplacedContigCountSpecifiedField;
        }
        set {
            this.unplacedContigCountSpecifiedField = value;
        }
    }
    
    /// <remarks>
///total number of sequence positions in the
///									mapset
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int seqlocCount {
        get {
            return this.seqlocCountField;
        }
        set {
            this.seqlocCountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool seqlocCountSpecified {
        get {
            return this.seqlocCountSpecifiedField;
        }
        set {
            this.seqlocCountSpecifiedField = value;
        }
    }
    
    /// <remarks>
///Number of hits to alternative genomic haplotypes
///									(e.g. HLA DR region, KIR, or pseudo-autosomal regions like PAR)
///									within the assembly mapset. Note that positions on haplotypes
///									defined in other assemblies (a different assembly_group_label
///									value) will not be counted in this value.
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int hapCount {
        get {
            return this.hapCountField;
        }
        set {
            this.hapCountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool hapCountSpecified {
        get {
            return this.hapCountSpecifiedField;
        }
        set {
            this.hapCountSpecifiedField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum AssemblySnpStatMapWeight {
    
    /// <remarks/>
    unmapped,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("unique-in-contig")]
    uniqueincontig,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("two-hits-in-contig")]
    twohitsincontig,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("less-10-hits")]
    less10hits,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("multiple-hits")]
    multiplehits,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class PrimarySequence {
    
    private int dbSnpBuildField2;
    
    private int giField1;
    
    private PrimarySequenceSource sourceField;
    
    private bool sourceSpecifiedField;
    
    private string accessionField1;
    
    private MapLoc[] mapLocField1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int dbSnpBuild {
        get {
            return this.dbSnpBuildField2;
        }
        set {
            this.dbSnpBuildField2 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int gi {
        get {
            return this.giField1;
        }
        set {
            this.giField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public PrimarySequenceSource source {
        get {
            return this.sourceField;
        }
        set {
            this.sourceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool sourceSpecified {
        get {
            return this.sourceSpecifiedField;
        }
        set {
            this.sourceSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string accession {
        get {
            return this.accessionField1;
        }
        set {
            this.accessionField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MapLoc")]
    public MapLoc[] MapLoc {
        get {
            return this.mapLocField1;
        }
        set {
            this.mapLocField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum PrimarySequenceSource {
    
    /// <remarks/>
    submitter,
    
    /// <remarks/>
    blastmb,
    
    /// <remarks/>
    xm,
    
    /// <remarks/>
    remap,
    
    /// <remarks/>
    hgvs,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class RsStruct {
    
    private string protAccField1;
    
    private int protGiField;
    
    private bool protGiSpecifiedField;
    
    private int protLocField;
    
    private bool protLocSpecifiedField;
    
    private string protResidueField;
    
    private string rsResidueField;
    
    private int structGiField;
    
    private bool structGiSpecifiedField;
    
    private int structLocField;
    
    private bool structLocSpecifiedField;
    
    private string structResidueField;
    
    /// <remarks>
///accession of the protein with variation
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string protAcc {
        get {
            return this.protAccField1;
        }
        set {
            this.protAccField1 = value;
        }
    }
    
    /// <remarks>
///GI of the protein with variation
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int protGi {
        get {
            return this.protGiField;
        }
        set {
            this.protGiField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool protGiSpecified {
        get {
            return this.protGiSpecifiedField;
        }
        set {
            this.protGiSpecifiedField = value;
        }
    }
    
    /// <remarks>
///position of the residue for the protein
///						GI
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int protLoc {
        get {
            return this.protLocField;
        }
        set {
            this.protLocField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool protLocSpecified {
        get {
            return this.protLocSpecifiedField;
        }
        set {
            this.protLocSpecifiedField = value;
        }
    }
    
    /// <remarks>
///residue specified for protein at prot-loc
///						location
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string protResidue {
        get {
            return this.protResidueField;
        }
        set {
            this.protResidueField = value;
        }
    }
    
    /// <remarks>
///alternative residue specified by variation
///						sequence
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string rsResidue {
        get {
            return this.rsResidueField;
        }
        set {
            this.rsResidueField = value;
        }
    }
    
    /// <remarks>
///GI of the structure neighbor
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int structGi {
        get {
            return this.structGiField;
        }
        set {
            this.structGiField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool structGiSpecified {
        get {
            return this.structGiSpecifiedField;
        }
        set {
            this.structGiSpecifiedField = value;
        }
    }
    
    /// <remarks>
///position of the residue for the structure
///						GI
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int structLoc {
        get {
            return this.structLocField;
        }
        set {
            this.structLocField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool structLocSpecified {
        get {
            return this.structLocSpecifiedField;
        }
        set {
            this.structLocSpecifiedField = value;
        }
    }
    
    /// <remarks>
///residue specified for protein at struct-loc
///						location
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string structResidue {
        get {
            return this.structResidueField;
        }
        set {
            this.structResidueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class RsLinkout {
    
    private string resourceIdField;
    
    private string linkValueField;
    
    /// <remarks>
///BaseURLList.url_id
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string resourceId {
        get {
            return this.resourceIdField;
        }
        set {
            this.resourceIdField = value;
        }
    }
    
    /// <remarks>
///value to append to ResourceURL.base-url for complete
///						link
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string linkValue {
        get {
            return this.linkValueField;
        }
        set {
            this.linkValueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class RsMergeHistory {
    
    private int rsIdField1;
    
    private int buildIdField1;
    
    private bool buildIdSpecifiedField1;
    
    private bool orientFlipField;
    
    private bool orientFlipSpecifiedField;
    
    /// <remarks>
///previously issued rs id whose member assays have
///									now been merged
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int rsId {
        get {
            return this.rsIdField1;
        }
        set {
            this.rsIdField1 = value;
        }
    }
    
    /// <remarks>
///build id when rs id was merged into parent
///									rs
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int buildId {
        get {
            return this.buildIdField1;
        }
        set {
            this.buildIdField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool buildIdSpecified {
        get {
            return this.buildIdSpecifiedField1;
        }
        set {
            this.buildIdSpecifiedField1 = value;
        }
    }
    
    /// <remarks>
///TRUE if strand of rs id is reverse to parent
///									object's current strand
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public bool orientFlip {
        get {
            return this.orientFlipField;
        }
        set {
            this.orientFlipField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool orientFlipSpecified {
        get {
            return this.orientFlipSpecifiedField;
        }
        set {
            this.orientFlipSpecifiedField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class RsAlleleOrigin {
    
    private string alleleField1;
    
    private string valueField1;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string allele {
        get {
            return this.alleleField1;
        }
        set {
            this.alleleField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField1;
        }
        set {
            this.valueField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class RsBioSource {
    
    private string[] genomeField;
    
    private string[] originField;
    
    /// <remarks>
///         
///										unknown (0) ,
///										genomic (1) ,
///										chloroplast (2) ,
///										chromoplast (3) ,
///										kinetoplast (4) ,
///										mitochondrion (5) ,
///										plastid (6) ,
///										macronuclear (7) ,
///										extrachrom (8) ,
///										plasmid (9) ,
///										transposon (10) ,
///										insertion-seq (11) ,
///										cyanelle (12) ,
///										proviral (13) ,
///										virion (14) ,
///										nucleomorph (15) ,
///										apicoplast (16) ,
///										leucoplast (17) ,
///										proplastid (18) ,
///										endogenous-virus (19) ,
///										hydrogenosome (20) ,
///										chromosome (21) ,
///										chromatophore (22)
///									
///</remarks>
    [System.Xml.Serialization.XmlElementAttribute("Genome")]
    public string[] Genome {
        get {
            return this.genomeField;
        }
        set {
            this.genomeField = value;
        }
    }
    
    /// <remarks>
///         
///										unknown (0) ,
///										natural (1) ,                    normal biological entity
///										natmut (2) ,                    naturally occurring mutant
///										mut (3) ,                        artificially mutagenized
///										artificial (4) ,                 artificially engineered
///										synthetic (5) ,                 purely synthetic
///										other (255)
///									
///</remarks>
    [System.Xml.Serialization.XmlElementAttribute("Origin")]
    public string[] Origin {
        get {
            return this.originField;
        }
        set {
            this.originField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class RsFrequency {
    
    private double freqField;
    
    private bool freqSpecifiedField;
    
    private string alleleField2;
    
    private string popIdField;
    
    private string sampleSizeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public double freq {
        get {
            return this.freqField;
        }
        set {
            this.freqField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool freqSpecified {
        get {
            return this.freqSpecifiedField;
        }
        set {
            this.freqSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string allele {
        get {
            return this.alleleField2;
        }
        set {
            this.alleleField2 = value;
        }
    }
    
    /// <remarks>
///dbSNP Populaton ID
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string popId {
        get {
            return this.popIdField;
        }
        set {
            this.popIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string sampleSize {
        get {
            return this.sampleSizeField;
        }
        set {
            this.sampleSizeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class Assay {
    
    private string handleField1;
    
    private string batchField;
    
    private int batchIdField1;
    
    private bool batchIdSpecifiedField;
    
    private AssayBatchType batchTypeField;
    
    private bool batchTypeSpecifiedField;
    
    private AssayMolType molTypeField2;
    
    private bool molTypeSpecifiedField1;
    
    private int sampleSizeField1;
    
    private bool sampleSizeSpecifiedField;
    
    private string populationField;
    
    private string linkoutUrlField1;
    
    private AssayMethod methodField;
    
    private AssayTaxonomy taxonomyField;
    
    private string[] strainsField;
    
    private string commentField;
    
    private string[] citationField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string handle {
        get {
            return this.handleField1;
        }
        set {
            this.handleField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string batch {
        get {
            return this.batchField;
        }
        set {
            this.batchField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int batchId {
        get {
            return this.batchIdField1;
        }
        set {
            this.batchIdField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool batchIdSpecified {
        get {
            return this.batchIdSpecifiedField;
        }
        set {
            this.batchIdSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public AssayBatchType batchType {
        get {
            return this.batchTypeField;
        }
        set {
            this.batchTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool batchTypeSpecified {
        get {
            return this.batchTypeSpecifiedField;
        }
        set {
            this.batchTypeSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public AssayMolType molType {
        get {
            return this.molTypeField2;
        }
        set {
            this.molTypeField2 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool molTypeSpecified {
        get {
            return this.molTypeSpecifiedField1;
        }
        set {
            this.molTypeSpecifiedField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int sampleSize {
        get {
            return this.sampleSizeField1;
        }
        set {
            this.sampleSizeField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool sampleSizeSpecified {
        get {
            return this.sampleSizeSpecifiedField;
        }
        set {
            this.sampleSizeSpecifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string population {
        get {
            return this.populationField;
        }
        set {
            this.populationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string linkoutUrl {
        get {
            return this.linkoutUrlField1;
        }
        set {
            this.linkoutUrlField1 = value;
        }
    }
    
    /// <remarks/>
    public AssayMethod Method {
        get {
            return this.methodField;
        }
        set {
            this.methodField = value;
        }
    }
    
    /// <remarks/>
    public AssayTaxonomy Taxonomy {
        get {
            return this.taxonomyField;
        }
        set {
            this.taxonomyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Strains")]
    public string[] Strains {
        get {
            return this.strainsField;
        }
        set {
            this.strainsField = value;
        }
    }
    
    /// <remarks/>
    public string Comment {
        get {
            return this.commentField;
        }
        set {
            this.commentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Citation")]
    public string[] Citation {
        get {
            return this.citationField;
        }
        set {
            this.citationField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum AssayBatchType {
    
    /// <remarks/>
    snpassay,
    
    /// <remarks/>
    validation,
    
    /// <remarks/>
    doublehit,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public enum AssayMolType {
    
    /// <remarks/>
    genomic,
    
    /// <remarks/>
    cDNA,
    
    /// <remarks/>
    mito,
    
    /// <remarks/>
    chloro,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class AssayMethod {
    
    private string nameField1;
    
    private string idField1;
    
    private string exceptionField;
    
    /// <remarks>
///Submitters method identifier
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string name {
        get {
            return this.nameField1;
        }
        set {
            this.nameField1 = value;
        }
    }
    
    /// <remarks>
///dbSNP method identifier
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string Id {
        get {
            return this.idField1;
        }
        set {
            this.idField1 = value;
        }
    }
    
    /// <remarks>
///description of deviation from/addition to
///										given method 
///</remarks>
    public string Exception {
        get {
            return this.exceptionField;
        }
        set {
            this.exceptionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class AssayTaxonomy {
    
    private int idField2;
    
    private string organismField1;
    
    /// <remarks>
///NCBI taxonomy ID for
///									variation
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int id {
        get {
            return this.idField2;
        }
        set {
            this.idField2 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string organism {
        get {
            return this.organismField1;
        }
        set {
            this.organismField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class ExchangeSetQuery {
    
    private string dateField2;
    
    private string stringField;
    
    /// <remarks>
///yyyy-mm-dd
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string date {
        get {
            return this.dateField2;
        }
        set {
            this.dateField2 = value;
        }
    }
    
    /// <remarks>
///Query terms or search
///									constraints
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string @string {
        get {
            return this.stringField;
        }
        set {
            this.stringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class ExchangeSetSummary {
    
    private string numRsIdsField;
    
    private string totalSeqLengthField;
    
    private string numContigHitsField;
    
    private string numGeneHitsField;
    
    private string numGiHitsField;
    
    private string num3dStructsField;
    
    private string numAlleleFreqsField;
    
    private string numStsHitsField;
    
    private string numUnigeneCidsField;
    
    /// <remarks>
///Total number of refsnp-ids in this exchange set
///								
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string numRsIds {
        get {
            return this.numRsIdsField;
        }
        set {
            this.numRsIdsField = value;
        }
    }
    
    /// <remarks>
///Total length of exemplar flanking
///									sequences
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string totalSeqLength {
        get {
            return this.totalSeqLengthField;
        }
        set {
            this.totalSeqLengthField = value;
        }
    }
    
    /// <remarks>
///Total number of contig locations from
///									SNPContigLoc
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string numContigHits {
        get {
            return this.numContigHitsField;
        }
        set {
            this.numContigHitsField = value;
        }
    }
    
    /// <remarks>
///Total number of locus ids from
///									SNPContigLocusId
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string numGeneHits {
        get {
            return this.numGeneHitsField;
        }
        set {
            this.numGeneHitsField = value;
        }
    }
    
    /// <remarks>
///Total number of gi hits from
///									MapLink
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string numGiHits {
        get {
            return this.numGiHitsField;
        }
        set {
            this.numGiHitsField = value;
        }
    }
    
    /// <remarks>
///Total number of 3D structures from
///									SNP3D
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string num3dStructs {
        get {
            return this.num3dStructsField;
        }
        set {
            this.num3dStructsField = value;
        }
    }
    
    /// <remarks>
///Total number of allele frequences from
///									SubPopAllele
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string numAlleleFreqs {
        get {
            return this.numAlleleFreqsField;
        }
        set {
            this.numAlleleFreqsField = value;
        }
    }
    
    /// <remarks>
///Total number of STS hits from
///									SnpInSts
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string numStsHits {
        get {
            return this.numStsHitsField;
        }
        set {
            this.numStsHitsField = value;
        }
    }
    
    /// <remarks>
///Total number of unigene cluster ids from
///									UnigeneSnp
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="integer")]
    public string numUnigeneCids {
        get {
            return this.numUnigeneCidsField;
        }
        set {
            this.numUnigeneCidsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.ncbi.nlm.nih.gov/soap/eutils/efetch_snp")]
public partial class BaseURL {
    
    private int urlIdField;
    
    private bool urlIdSpecifiedField;
    
    private string resourceNameField;
    
    private string resourceIdField1;
    
    private string valueField2;
    
    /// <remarks>
///Resource identifier from
///								dbSNP_main.baseURL.
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public int urlId {
        get {
            return this.urlIdField;
        }
        set {
            this.urlIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnore()]
    public virtual bool urlIdSpecified {
        get {
            return this.urlIdSpecifiedField;
        }
        set {
            this.urlIdSpecifiedField = value;
        }
    }
    
    /// <remarks>
///Name of linked resource
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string resourceName {
        get {
            return this.resourceNameField;
        }
        set {
            this.resourceNameField = value;
        }
    }
    
    /// <remarks>
///identifier expected by resource for
///								URL
///</remarks>
    [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
    public string resourceId {
        get {
            return this.resourceIdField1;
        }
        set {
            this.resourceIdField1 = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField2;
        }
        set {
            this.valueField2 = value;
        }
    }
}

public partial class run_eFetchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal run_eFetchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public MessageEFetchResult Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MessageEFetchResult)(this.results[0]));
        }
    }
}

public delegate void run_eFetchCompletedEventHandler(object sender, run_eFetchCompletedEventArgs args);

}	// namespace EhuBio.Database.Ncbi.eFetch.Snp