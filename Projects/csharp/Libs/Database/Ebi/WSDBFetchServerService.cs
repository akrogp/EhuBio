// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
// This source code was auto-generated by Web Services Description Language Utility
//Mono Framework v2.0.50727.1433
//

namespace EhuBio.Database.Ebi {

/// <remarks/>
/// <remarks>
///
///
///WSDbfetch: entry retrieval using entry identifiers or accession numbers for 
///various biological databases, including EMBL-Bank, InterPro, MEDLINE, Patent 
///Proteins, PDB, RefSeq, UniParc, UniProtKB and UniRef.
///
///Note: this is an RPC/encoded SOAP interface to the WSDbfetch service, for 
///other interfaces please see the documentation 
///(http://www.ebi.ac.uk/Tools/webservices/services/dbfetch).
///    
///</remarks>
[System.Web.Services.WebServiceBinding(Name="WSDbfetch", Namespace="http://www.ebi.ac.uk/ws/services/WSDbfetch")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class WSDBFetchServerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback getDbFormatsOperationCompleted;
    
    private System.Threading.SendOrPostCallback fetchDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback fetchBatchOperationCompleted;
    
    private System.Threading.SendOrPostCallback getSupportedDBsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getSupportedFormatsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getFormatStylesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getSupportedStylesOperationCompleted;
    
    public WSDBFetchServerService() {
        this.Url = "http://www.ebi.ac.uk/ws/services/WSDbfetch";
    }
    
    public event getDbFormatsCompletedEventHandler getDbFormatsCompleted;
    
    public event fetchDataCompletedEventHandler fetchDataCompleted;
    
    public event fetchBatchCompletedEventHandler fetchBatchCompleted;
    
    public event getSupportedDBsCompletedEventHandler getSupportedDBsCompleted;
    
    public event getSupportedFormatsCompletedEventHandler getSupportedFormatsCompleted;
    
    public event getFormatStylesCompletedEventHandler getFormatStylesCompleted;
    
    public event getSupportedStylesCompletedEventHandler getSupportedStylesCompleted;
    
    /// <remarks>
///
///Get a list of formats for a given database (see http://www.ebi.ac.uk/Tools/webservices/services/dbfetch#getdbformats_db).   
///</remarks>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.ebi.ac.uk/ws/services/WSDbfetch", ResponseNamespace="http://www.ebi.ac.uk/ws/services/WSDbfetch")]
    [return: System.Xml.Serialization.SoapElement("getDbFormatsReturn")]
    public string[] getDbFormats(string db) {
        object[] results = this.Invoke("getDbFormats", new object[] {
                    db});
        return ((string[])(results[0]));
    }
    
    public System.IAsyncResult BegingetDbFormats(string db, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getDbFormats", new object[] {
                    db}, callback, asyncState);
    }
    
    public string[] EndgetDbFormats(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    public void getDbFormatsAsync(string db) {
        this.getDbFormatsAsync(db, null);
    }
    
    public void getDbFormatsAsync(string db, object userState) {
        if ((this.getDbFormatsOperationCompleted == null)) {
            this.getDbFormatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDbFormatsCompleted);
        }
        this.InvokeAsync("getDbFormats", new object[] {
                    db}, this.getDbFormatsOperationCompleted, userState);
    }
    
    private void OngetDbFormatsCompleted(object arg) {
        if ((this.getDbFormatsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getDbFormatsCompleted(this, new getDbFormatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///
///Get a database entry (see http://www.ebi.ac.uk/Tools/webservices/services/dbfetch#fetchdata_query_format_style).   
///</remarks>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.ebi.ac.uk/ws/services/WSDbfetch", ResponseNamespace="http://www.ebi.ac.uk/ws/services/WSDbfetch")]
    [return: System.Xml.Serialization.SoapElement("fetchDataReturn")]
    public string fetchData(string query, string format, string style) {
        object[] results = this.Invoke("fetchData", new object[] {
                    query,
                    format,
                    style});
        return ((string)(results[0]));
    }
    
    public System.IAsyncResult BeginfetchData(string query, string format, string style, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("fetchData", new object[] {
                    query,
                    format,
                    style}, callback, asyncState);
    }
    
    public string EndfetchData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    public void fetchDataAsync(string query, string format, string style) {
        this.fetchDataAsync(query, format, style, null);
    }
    
    public void fetchDataAsync(string query, string format, string style, object userState) {
        if ((this.fetchDataOperationCompleted == null)) {
            this.fetchDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchDataCompleted);
        }
        this.InvokeAsync("fetchData", new object[] {
                    query,
                    format,
                    style}, this.fetchDataOperationCompleted, userState);
    }
    
    private void OnfetchDataCompleted(object arg) {
        if ((this.fetchDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.fetchDataCompleted(this, new fetchDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///
///Get a set of database entries (see http://www.ebi.ac.uk/Tools/webservices/services/dbfetch#fetchbatch_db_ids_format_style).   
///</remarks>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.ebi.ac.uk/ws/services/WSDbfetch", ResponseNamespace="http://www.ebi.ac.uk/ws/services/WSDbfetch")]
    [return: System.Xml.Serialization.SoapElement("fetchBatchReturn")]
    public string fetchBatch(string db, string ids, string format, string style) {
        object[] results = this.Invoke("fetchBatch", new object[] {
                    db,
                    ids,
                    format,
                    style});
        return ((string)(results[0]));
    }
    
    public System.IAsyncResult BeginfetchBatch(string db, string ids, string format, string style, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("fetchBatch", new object[] {
                    db,
                    ids,
                    format,
                    style}, callback, asyncState);
    }
    
    public string EndfetchBatch(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    public void fetchBatchAsync(string db, string ids, string format, string style) {
        this.fetchBatchAsync(db, ids, format, style, null);
    }
    
    public void fetchBatchAsync(string db, string ids, string format, string style, object userState) {
        if ((this.fetchBatchOperationCompleted == null)) {
            this.fetchBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchBatchCompleted);
        }
        this.InvokeAsync("fetchBatch", new object[] {
                    db,
                    ids,
                    format,
                    style}, this.fetchBatchOperationCompleted, userState);
    }
    
    private void OnfetchBatchCompleted(object arg) {
        if ((this.fetchBatchCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.fetchBatchCompleted(this, new fetchBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///
///Get a list of available databases (see http://www.ebi.ac.uk/Tools/webservices/services/dbfetch#getsupporteddbs).   
///</remarks>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.ebi.ac.uk/ws/services/WSDbfetch", ResponseNamespace="http://www.ebi.ac.uk/ws/services/WSDbfetch")]
    [return: System.Xml.Serialization.SoapElement("getSupportedDBsReturn")]
    public string[] getSupportedDBs() {
        object[] results = this.Invoke("getSupportedDBs", new object[0]);
        return ((string[])(results[0]));
    }
    
    public System.IAsyncResult BegingetSupportedDBs(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getSupportedDBs", new object[0], callback, asyncState);
    }
    
    public string[] EndgetSupportedDBs(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    public void getSupportedDBsAsync() {
        this.getSupportedDBsAsync(null);
    }
    
    public void getSupportedDBsAsync(object userState) {
        if ((this.getSupportedDBsOperationCompleted == null)) {
            this.getSupportedDBsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupportedDBsCompleted);
        }
        this.InvokeAsync("getSupportedDBs", new object[0], this.getSupportedDBsOperationCompleted, userState);
    }
    
    private void OngetSupportedDBsCompleted(object arg) {
        if ((this.getSupportedDBsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getSupportedDBsCompleted(this, new getSupportedDBsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///
///Get a list of databases and formats (see http://www.ebi.ac.uk/Tools/webservices/services/dbfetch#getsupportedformats).   
///</remarks>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.ebi.ac.uk/ws/services/WSDbfetch", ResponseNamespace="http://www.ebi.ac.uk/ws/services/WSDbfetch")]
    [return: System.Xml.Serialization.SoapElement("getSupportedFormatsReturn")]
    public string[] getSupportedFormats() {
        object[] results = this.Invoke("getSupportedFormats", new object[0]);
        return ((string[])(results[0]));
    }
    
    public System.IAsyncResult BegingetSupportedFormats(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getSupportedFormats", new object[0], callback, asyncState);
    }
    
    public string[] EndgetSupportedFormats(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    public void getSupportedFormatsAsync() {
        this.getSupportedFormatsAsync(null);
    }
    
    public void getSupportedFormatsAsync(object userState) {
        if ((this.getSupportedFormatsOperationCompleted == null)) {
            this.getSupportedFormatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupportedFormatsCompleted);
        }
        this.InvokeAsync("getSupportedFormats", new object[0], this.getSupportedFormatsOperationCompleted, userState);
    }
    
    private void OngetSupportedFormatsCompleted(object arg) {
        if ((this.getSupportedFormatsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getSupportedFormatsCompleted(this, new getSupportedFormatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///
///Get a list of available styles for a format of a database (see http://www.ebi.ac.uk/Tools/webservices/services/dbfetch#getformatstyles_db_format).   
///</remarks>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.ebi.ac.uk/ws/services/WSDbfetch", ResponseNamespace="http://www.ebi.ac.uk/ws/services/WSDbfetch")]
    [return: System.Xml.Serialization.SoapElement("getFormatStylesReturn")]
    public string[] getFormatStyles(string db, string format) {
        object[] results = this.Invoke("getFormatStyles", new object[] {
                    db,
                    format});
        return ((string[])(results[0]));
    }
    
    public System.IAsyncResult BegingetFormatStyles(string db, string format, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getFormatStyles", new object[] {
                    db,
                    format}, callback, asyncState);
    }
    
    public string[] EndgetFormatStyles(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    public void getFormatStylesAsync(string db, string format) {
        this.getFormatStylesAsync(db, format, null);
    }
    
    public void getFormatStylesAsync(string db, string format, object userState) {
        if ((this.getFormatStylesOperationCompleted == null)) {
            this.getFormatStylesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFormatStylesCompleted);
        }
        this.InvokeAsync("getFormatStyles", new object[] {
                    db,
                    format}, this.getFormatStylesOperationCompleted, userState);
    }
    
    private void OngetFormatStylesCompleted(object arg) {
        if ((this.getFormatStylesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getFormatStylesCompleted(this, new getFormatStylesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks>
///
///Deprecated: use getFormatStyles(). Get a list of databases and styles (see http://www.ebi.ac.uk/Tools/webservices/services/dbfetch#fetchdata_query_format_style).   
///</remarks>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.ebi.ac.uk/ws/services/WSDbfetch", ResponseNamespace="http://www.ebi.ac.uk/ws/services/WSDbfetch")]
    [return: System.Xml.Serialization.SoapElement("getSupportedStylesReturn")]
    public string[] getSupportedStyles() {
        object[] results = this.Invoke("getSupportedStyles", new object[0]);
        return ((string[])(results[0]));
    }
    
    public System.IAsyncResult BegingetSupportedStyles(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getSupportedStyles", new object[0], callback, asyncState);
    }
    
    public string[] EndgetSupportedStyles(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    public void getSupportedStylesAsync() {
        this.getSupportedStylesAsync(null);
    }
    
    public void getSupportedStylesAsync(object userState) {
        if ((this.getSupportedStylesOperationCompleted == null)) {
            this.getSupportedStylesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupportedStylesCompleted);
        }
        this.InvokeAsync("getSupportedStyles", new object[0], this.getSupportedStylesOperationCompleted, userState);
    }
    
    private void OngetSupportedStylesCompleted(object arg) {
        if ((this.getSupportedStylesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getSupportedStylesCompleted(this, new getSupportedStylesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
}

public partial class getDbFormatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getDbFormatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

public delegate void getDbFormatsCompletedEventHandler(object sender, getDbFormatsCompletedEventArgs args);

public partial class fetchDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal fetchDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

public delegate void fetchDataCompletedEventHandler(object sender, fetchDataCompletedEventArgs args);

public partial class fetchBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal fetchBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

public delegate void fetchBatchCompletedEventHandler(object sender, fetchBatchCompletedEventArgs args);

public partial class getSupportedDBsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getSupportedDBsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

public delegate void getSupportedDBsCompletedEventHandler(object sender, getSupportedDBsCompletedEventArgs args);

public partial class getSupportedFormatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getSupportedFormatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

public delegate void getSupportedFormatsCompletedEventHandler(object sender, getSupportedFormatsCompletedEventArgs args);

public partial class getFormatStylesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getFormatStylesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

public delegate void getFormatStylesCompletedEventHandler(object sender, getFormatStylesCompletedEventArgs args);

public partial class getSupportedStylesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getSupportedStylesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

public delegate void getSupportedStylesCompletedEventHandler(object sender, getSupportedStylesCompletedEventArgs args);

}		// namespace EhuBio.Database.Ebi
